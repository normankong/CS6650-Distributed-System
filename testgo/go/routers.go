/*
 * Ski Data API for NEU Seattle distributed systems course
 *
 * An API for an emulation of skier managment system for RFID tagged lift tickets. Basis for CS6650 Assignments for 2019
 *
 * API version: 1.16
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"AddSeason",
		strings.ToUpper("Post"),
		"/resorts/{resortID}/seasons",
		AddSeason,
	},

	Route{
		"GetResortSeasons",
		strings.ToUpper("Get"),
		"/resorts/{resortID}/seasons",
		GetResortSeasons,
	},

	Route{
		"GetResortSkiersDay",
		strings.ToUpper("Get"),
		"/resorts/{resortID}/seasons/{seasonID}/day/{dayID}/skiers",
		GetResortSkiersDay,
	},

	Route{
		"GetResorts",
		strings.ToUpper("Get"),
		"/resorts",
		GetResorts,
	},

	Route{
		"GetSkierDayVertical",
		strings.ToUpper("Get"),
		"/skiers/{resortID}/seasons/{seasonID}/days/{dayID}/skiers/{skierID}",
		GetSkierDayVertical,
	},

	Route{
		"GetSkierResortTotals",
		strings.ToUpper("Get"),
		"/skiers/{skierID}/vertical",
		GetSkierResortTotals,
	},

	Route{
		"WriteNewLiftRide",
		strings.ToUpper("Post"),
		"/skiers/{resortID}/seasons/{seasonID}/days/{dayID}/skiers/{skierID}",
		WriteNewLiftRide,
	},

	Route{
		"GetPerformanceStats",
		strings.ToUpper("Get"),
		"/statistics",
		GetPerformanceStats,
	},
}
